/*–яЅ»Ќ»Ќ ё–»… √руппа 13. 1 Ћабораторна€ номер 2 задача 7
ѕрограмму перевода декартовых координат в пол€рные координаты и
обратно (на плоскости).*/
#include<iostream>
#include <math.h>
using namespace std;

void main()
{	
	setlocale(LC_ALL, "Russian");

	//÷икл позвол€ет сделать меню дл€ программы
	while (true)
	{	//ѕеременна€ а служит выходом из цикла, если она равна 0, иначе цикл выполн€етс€
		int a;
		cout << "¬ыберете действие 0 - выход, 1 - вычесление: " << endl;
		cin >> a;

		if (a == 0)
		{
			break;
		}
		else
		{	//цикл позвол€ет сделать еще одно меню
			while (true)
			{	// ѕеременна€ z делает первод 1) при ее значении 1, иначе делает перевод 2)
				int z;
				cout << "¬ыберете действие 1) - из декартовой в пол€рную, 2) - из пол€рной в декартовую: " << endl;
				cin >> z;
				if (z == 1)
				{	//ѕеременные х и у обозначают ось абсцисс и ось ординат соответственно
					double x, y;
					cout << "¬ведите x " << endl;
					cin >> x;

					cout << "¬ведите y " << endl;
					cin >> y;
					// ѕеременна€ r отвечает за пол€рный радиус, переменна€ к за пол€рный угол
					double r;
					r = sqrt(x * x + y * y);
					double k;
					k = atan(y / x) * 180 / 3.1415;

					cout << "ѕол€рный радиус = " << r << " " << "ѕол€рный угол = " << k << endl;

					break;

				}
				else
				{	// ѕеременна€ r отвечает за пол€рный радиус, переменна€ к за пол€рный угол
					double r, k;
					cout << "¬ведите пол€рный радиус " << endl;
					cin >> r;

					cout << "¬ведите пол€рный угол " << endl;
					cin >> k;
					k = k * 3.1415 / 180;
					//ѕеременные х и у обозначают ось абсцисс и ось ординат соответственно
					double x, y;

					x = r * cos(k);
					y = r * sin(k);

					cout << "x = " << x << " " << "y = " << y << endl;

					break;

				}
			}
		}




	}
}